local ecnet = require("ecnet");

local ADDRESS_CHANNEL = 25783;
local RESPONSE_CHANNEL = 25787;
local modem = peripheral.find("modem");
local s_modem = ecnet.wrap(modem);

local address = "none"

local connected = false

-- value of dat.type
local NETWORK_ADDUSERDAT = "NETWORK_ADDUSERDAT"; -- add a new user to the database
local NETWORK_ISAUTHUSER = "NETWORK_ISAUTHUSER"; -- check if the users credentials are correct, sends back a boolean
local NETWORK_GETBALANCE = "NETWORK_GETBALANCE"; -- gets users balance, requires auth
local NETWORK_ADDBALANCE = "NETWORK_ADDBALANCE"; -- adds to users balance, requires auth
local NETWORK_SUBBALANCE = "NETWORK_SUBBALANCE"; -- subtracts from users balance, requires auth
local NETWORK_ADDADDRESS = "NETWORK_ADDADDRESS"; -- add an address that is authorized to do ATM stuff, requires a special password
local NETWORK_ISAUTHADDR = "NETWORK_ISAUTHADDR"; -- ask if address is authed

function connect()
	print("connecting to server");
	-- attemt to connect loop
	while not connected do
		print("getting server address");
		-- ask the broadcast channel what the bank server address is
		modem.transmit(ADDRESS_CHANNEL, RESPONSE_CHANNEL, "DNS_REQ BANK");
		modem.open(RESPONSE_CHANNEL);
		parallel.waitForAny(function()
			_, __, ___, ____, address, ______ = os.pullEvent("modem_message");
		end, 
		function()
			sleep(3);
		end)
		
		modem.close(RESPONSE_CHANNEL);
		print("address recieved: " .. address);

		connected = s_modem.connect(address, 3);
	end
	print("connected to server");
	-- we should be connected to the server now
end

function addAuthAddress(password)

	local dat = {};
	dat.type = NETWORK_ADDADDRESS;
	dat.pass = password;
	s_modem.send(address, dat);

end